WALLET RPC ISSUES
sweepOutput("f4c6123ea4daa831d850785fd5f72d8f34fcd3606ef94431ea2cae7a3dbd03be") -37: not enough unlocked money, despite spent: false, unlocked: true
occasionally hangs in getTxsByIdsInPool()
ocasional seg fault 11 in testGetReserveProofAccount(), wallet rpc get_reserve_proof

14.0.3 RELEASE
MoneroSendConfig -> MoneroSendRequest
confirm tx ordering since internal impl uses sets
api updates: getTxsById, getBalancesWallet, more convenient filtering, remove typing on vouts, etc
update readme
generate javadoc
port changes to js
release

testGetNewKeyImagesFromLastImport
refactor getAccounts(Boolean includeSubaddresses, Boolean isUsed, String tag, Boolean includeBalanceDetails)? that's filtering with most known options (in internal wallet rpc)
handle blocks_to_unlock at top level of get_balance call which reflects account, but is it based only on queried subaddresses?
balances: getBalanceWallet(), getBalanceAccount(), getBalancesSubaddress() : return MoneroBalances .getUnlockedBalance(), .getLockedBalance()
more convenient filtering, e.g. one filter class with getTxId(), getInTxPool(), getIsOutgoing(), which is used in getTransfers(), etc
remove typing on e.g. MoneroOutput.getVouts()?
daemon.getTx(id), wallet needs equivalent convenience function
testGetTransactionsWallet() how are txs in same order since internal implementation uses set?
wallet.getTxs() returns txs in no particular order
fetched vout's tx is incoming and outgoing are false
multisig_txset and unsigned_txset on send tests
test wallet gets should send test transaction so unconfirmed tx can be tested with the others
incoming_transfers "available" could optimize request if !spent && unlocked?

NEXT
clean up todos
jni binding
model rct_signatures and rct_prunable
multisig
pruning

MONERO-RPC
HIGH
segmentation fault 11 on testReserveProofAccount() with balance but no unlocked balance
balances are wrong after sends (https://github.com/monero-project/monero/issues/4500)
incoming transactions are missing when outgoing counterpart from same account (https://github.com/monero-project/monero/issues/4500)

MEDIUM
typos on monero-wallet-rpc tx proofs, wrong output on check_reserve_proof
get_transfer add tx_size, tx_key (out or pending), destinations (pending), key_image (in or mempool)
get_transfers should default to all subaddresses, else all subaddresses must be pre-fetched to get all txs in account
get_transfer_by_txid add tx_size
incoming_transfers add address (low priority), fee, timestamp, unlock_time, is_double_spend, height, tx_size (misdocumented)
get transactions per block

LOW
get_reserve_proof document default account 0
check_reserve_proof documentation spent and total not documented as outputs
outgoing transactions src subaddress always 0, not actual src subaddresses
-1: Failed to open wallet if wallet is already open; better code and message
don't return incorrect balance information if multisig, instead return error
get_transfers defaults [0, 0], incoming_transfers defaults [0, all], get_bulk_payments defaults [all, all] (especially get_transfers should default to all else call to get_address is required first)
get_transfers returns all transactions whereas incoming_transfers returns incoming outputs; clarify terminology or both could return transactions for consistency
document get_transfers account_index and subaddr_indices defaults
document that rescan_bc destroys wallet cache (destination addresses, etc)
height vs block_height inconsistent
address book entries work by index instead of id which changes
tx_hash in incoming_transfers vs txid in get_transfers; standardize on tx_hash or tx_id
standardize terminology transactions vs transfers
standardize terminology payment vs output; one payment may be fulfilled with multiple outputs
implement/test other sweep tests

balances: getBalanceWallet(), getBalanceAccount(), getBalancesSubaddress() : return MoneroBalances .getUnlockedBalance(), .getLockedBalance()
more convenient filtering, e.g. one filter class with getTxId(), getInTxPool(), getIsOutgoing(), which is used in getTransfers(), etc
remove typing on e.g. MoneroOutput.getVouts()?
clean up these todos for new version
js todos

update to new master
update readme

v0.13.0.4
testGetTxsWallet() failing when run with other tests
support sweep_single (output)

offline sign/submit
do_not_relay with sweep
multisig

test wallet gets should send test transaction so unconfirmed tx can be tested with the others
consistent naming schemes, probably longest, like getSubaddressIndex()
ignoring multisig_txset and unsigned_txset on send tests
new api calls
payments are comprised of outputs
don't call accounts / subaddresses that are unused
test getTxs() with outgoing payments because fetched by id
test that subaddress numUnspentOutputs == incoming transfers unspent payments
test right after sending that get_transfers with sent id returns destinations
multisig support and tests
get_output_distribution distribution field cannot be deserialized to array of integer
belowAmount only supported in sweep?  assert not used when not usable
outbound transactions do not relable record minor, e.g. send from [2,3] but tx minor will be 0
optimize (cache subaddresses, check if used, etc)
generate javadoc
update readme

MONERO-RPC
HIGH
segmentation fault 11 on testReserveProofAccount() with balance but no unlocked balance
balances are wrong after sends (https://github.com/monero-project/monero/issues/4500)
incoming transactions are missing when outgoing counterpart from same account (https://github.com/monero-project/monero/issues/4500)
still seeing -16 tx not possible

MEDIUM
typos on monero-wallet-rpc tx proofs, wrong output on check_reserve_proof
get_transfer add tx_size, tx_key (out or pending), destinations (pending), key_image (in or mempool)
get_transfers should default to all subaddresses, else all subaddresses must be pre-fetched to get all txs in account
get_transfer_by_txid add tx_size
incoming_transfers add address (low priority), fee, timestamp, unlock_time, is_double_spend, height, tx_size (misdocumented)
binary rpc methods use a custom format which is not very portable
get transactions per block

LOW
get_reserve_proof document default account 0
check_reserve_proof documentation spent and total not documented as outputs
outgoing transactions src subaddress always 0, not actual src subaddresses
-1: Failed to open wallet if wallet is already open; better code and message
don't return incorrect balance information if multisig, instead return error
get_transfers defaults [0, 0], incoming_transfers defaults [0, all], get_bulk_payments defaults [all, all] (especially get_transfers should default to all else call to get_address is required first)
get_transfers returns all transactions whereas incoming_transfers returns incoming outputs; clarify terminology or both could return transactions for consistency
document get_transfers account_index and subaddr_indices defaults
document that rescan_bc destroys wallet cache (destination addresses, etc)
height vs block_height inconsistent
address book entries work by index instead of id which changes
tx_hash in incoming_transfers vs txid in get_transfers; standardize on tx_hash or tx_id
standardize terminology transactions vs transfers
standardize terminology payment vs output; one payment may be fulfilled with multiple outputs